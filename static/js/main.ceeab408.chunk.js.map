{"version":3,"sources":["components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","api/api.ts","App.tsx","index.tsx"],"names":["TodoList","setUseId","todos","useState","title","setTitle","status","setStatus","shownTodo","filter","todo","includes","completed","className","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","name","selected","map","classNames","checked","readOnly","onClick","userId","CurrentUser","user","setUser","useEffect","fetch","then","response","json","email","phone","App","selectedUserId","setSelectedUserId","setTodos","setUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ceeab408.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../react-app-env';\nimport './TodoList.scss';\n\ntype Props = {\n  setUseId: (id: number) => void;\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ setUseId, todos }) => {\n  const [title, setTitle] = useState('');\n  const [status, setStatus] = useState('all');\n\n  const shownTodo = todos.filter(todo => {\n    if (status === 'completed') {\n      return todo.title.includes(title) && todo.completed;\n    }\n\n    if (status === 'active') {\n      return todo.title.includes(title) && !todo.completed;\n    }\n\n    return todo.title.includes(title);\n  });\n\n  return (\n    <div className=\"TodoList\">\n      <form onSubmit={(event) => event.preventDefault()}>\n        <label htmlFor=\"titleInput\">Title: </label>\n        <input\n          type=\"text\"\n          id=\"titleInput\"\n          data-cy=\"filterByTitle\"\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n        />\n\n        <label htmlFor=\"status\"> Status: </label>\n        <select\n          name=\"status\"\n          id=\"status\"\n          value={status}\n          onChange={event => setStatus(event.target.value)}\n        >\n          <option value=\"all\" selected>All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </form>\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {shownTodo.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames('TodoList__item', {\n                ' TodoList__item--checked': todo.completed,\n                ' TodoList__item--unchecked': !todo.completed,\n              })}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                data-cy=\"userButton\"\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => setUseId(todo.userId)}\n              >\n                {`User ${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api/api';\nimport { User } from '../../react-app-env';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number;\n  setUseId: (id: number) => void;\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId, setUseId }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(response => setUser(response));\n  }, [userId]);\n\n  return (\n    <>\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user?.id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\" data-cy=\"userName\">{user?.name}</h3>\n        <p className=\"CurrentUser__email\">{user?.email}</p>\n        <p className=\"CurrentUser__phone\">{user?.phone}</p>\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => setUseId(0)}\n      >\n        Clear\n      </button>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/quotes */\nconst API_URL_TODO = `https://mate.academy/students-api/todos`;\nconst API_URL_USERS = `https://mate.academy/students-api/users`;\n\nexport const getTodo = () => {\n  return fetch(API_URL_TODO)\n    .then(response => response.json());\n};\n\nexport const getUser = (id: number) => {\n  return fetch(`${API_URL_USERS}/${id}`)\n    .then(response => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodo } from './api/api';\nimport { Todo } from './react-app-env';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const setUserId = (id: number) => {\n    setSelectedUserId(id);\n  };\n\n  useEffect(() => {\n    getTodo()\n      .then(response => setTodos(response));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList setUseId={setUserId} todos={todos} />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser userId={selectedUserId} setUseId={setUserId} />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}